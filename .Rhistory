print("hi")
data <- 1:10
print("hi")
data <- 1:10
data
data= 1:16
data <- 1:10
data = read.csv(file.choose())
data = read.csv(read.csv(file.choose()))
View(data)
colnames(data)
row.names(data)
View(data)
my_data_selected-column = data[1:5]
my_data_selected-column = data[,1:5]
install.packages("xlsx")
View(data)
print("jesus")
data <- 1:15
BiocManager::install("DESeq2")  # Example: RNA-seq analysis
library(readxl)
library(readxl)
library(readxl)
install.packages("readxl")
install.packages("readxl")
# INSTALL WITH VISUAL CONFIRMATION
install.packages("readxl")  # <- COPY THIS EXACTLY
data<- 1:3
data <-read_xls(file.choose(book1))
# INSTALL WITH VISUAL CONFIRMATION
install.packages("readxl")  # <- COPY THIS EXACTLY
library(readxl)
print("hi")
data <- 1:10
data
data = read.csv(file.choose())
load("C:/Users/eggce/OneDrive/Documents/.RData")
data = read.xlxs(file.choose())
library(openxlsx)
file.choose()
library(readxl)
data <- read_excel(file.choose())   # Choose Book1 when the dialog opens
View(data)
view(data)
View(data)
library(readxl)
data <- read_excel(file.choose())   # Choose Book1 when the dialog opens
data <- readxl::read_excel(file.choose())
view(data)
data <- readxl::read_excel(file.choose())
View(data)
colnames(data)
data <- readxl::read_xlsx(file.choose())
row.name(data)
row.names(data)
rownames(data$gene_id)        #to select any column u like(manually)
rownames(data$Name)        #to select any column u like(manually)
rownames(data$gene_id)        #to select any column u like(manually)
data$gene_id
sample_gene_id = data$gene_id
sample_gene_id
gene = data[,-1]                #to delete a row/column store it and a different variable name[row,column]
View(gene)
damn = data[-1,1:2]
View(gene)
View(damn)
gene_selected_columns = data[,1:3] #to select columns
View(gene_selected_columns)
gene_selected_columns = data[1,1:3] #to select one sample
View(gene_selected_columns)
colnames(data)[1,1]="FR68"
colnames(data)[1]="FR68"
colnames(data)[1]="id_gene"
library(dplyr)
install.packages("dplyr")   # Do this only once
library(dplyr)              # Load it every time you start R
library(dplyr)              # Load it every time you start R
data = data %>% rename_with( #to rename stuffs ahveing the same alphabet with something
~gsub("g","sample",.x)
.cols = contains("g")      #to specify whether its the columns or the rows u wanna change
~gsub("g","sample",.x
data = data %>% rename_with( #to rename stuffs ahveing the same alphabet with something
data = data %>% rename_with( #to rename stuffs ahveing the same alphabet with something
~gsub("g","sample",.x)
.cols = contains("g")      #to specify whether its the columns or the rows u wanna change
data = data %>% rename_with( #to rename stuffs ahveing the same alphabet with something
~gsub("g","sample",.x),
.cols = contains("g")      #to specify whether its the columns or the rows u wanna change
)
View(data)
data = data %>% rename_with( #to rename stuffs ahveing the same alphabet with something
~gsub("g","G",.x),
.cols = contains("g")      #to specify whether its the columns or the rows u wanna change
)
data = data %>% rename_with( #to rename stuffs ahveing the same alphabet with something
~gsub("g","G",.x),
.cols = contains("g")      #to specify whether its the columns or the rows u wanna change
)
)
data = data %>% rename_with( #to rename stuffs ahveing the same alphabet with something
~gsub("g","a",.x),
.cols = contains("g")      #to specify whether its the columns or the rows u wanna change
)
data = data %>% rename_with( #to rename stuffs ahveing the same alphabet with something
~gsub("g","NEW",.x),
.cols = contains("g")      #to specify whether its the columns or the rows u wanna change
)
View(data)
install.packages("dplyr")
getwd()
setwd(""C:\Users\eggce\OneDrive\AI_Omics_Internship_2025"")
setwd("C:\Users\eggce\OneDrive\AI_Omics_Internship_2025")
setwd("C:/Users/eggce/OneDrive/AI_Omics_Internship_2025")
getwd()
setwd("C:/Users/eggce/OneDrive/AI_Omics_Internship_2025")
getwd()
